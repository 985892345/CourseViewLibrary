<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="CourseView">
        <attr name="course_month_color" format="color"/>
        <attr name="course_month_size" format="dimension"/>
        <attr name="course_week_color" format="color"/>
        <attr name="course_week_size" format="dimension"/>
        <attr name="course_date_color" format="color"/>
        <attr name="course_date_size" format="dimension"/>
        <attr name="course_time_color" format="color"/>
        <attr name="course_time_size" format="dimension"/>
        <attr name="course_noon_color" format="color"/>
        <attr name="course_noon_size" format="dimension"/>
        <attr name="course_dusk_color" format="color"/>
        <attr name="course_dusk_size" format="dimension"/>
    </declare-styleable>

    <declare-styleable name="CourseLayout_Layout">
        <!--周的天数，星期一为 1-->
        <attr name="course_layout_day" format="integer"/>
        <!--课的开始位置，从 0 开始，与课的开始节数不对应，如：一、二节课，为 0；三、四节课为 2；中午为 4-->
        <attr name="course_layout_startPos" format="integer"/>
        <!--课的长度-->
        <attr name="course_layout_length" format="integer"/>
        <!--添加进来的子 View 的类型，与 utils 包下 CourseType 一一对应-->
        <attr name="course_layout_type" format="enum">
            <!--这里并不需要写完全部类型，只需要写 xml 中会使用的即可，且按顺序对应-->
            <enum name="time" value="3"/>
            <enum name="noon" value="4"/>
            <enum name="dusk" value="5"/>
        </attr>
    </declare-styleable>

    <declare-styleable name="NetLayout">
        <!--总行数-->
        <attr name="net_rowCount" format="integer"/>
        <!--总列数-->
        <attr name="net_columnCount" format="integer"/>
    </declare-styleable>

    <declare-styleable name="NetLayout_Layout">
        <!--开始行的索引值，以 0 开始，注意：如果不给属性赋值，则默认不会显示 View-->
        <attr name="net_layout_startRow" format="integer"/>
        <!--结束行的索引值，以 0 开始，注意：如果不给属性赋值，则默认不会显示 View-->
        <attr name="net_layout_endRow" format="integer"/>
        <!--开始列的索引值，以 0 开始，注意：如果不给属性赋值，则默认不会显示 View-->
        <attr name="net_layout_startColumn" format="integer"/>
        <!--结束列的索引值，以 0 开始，注意：如果不给属性赋值，则默认不会显示 View-->
        <attr name="net_layout_endColumn" format="integer"/>
        <!--子 View 的 layout_gravity，与 Fragment 相同-->
        <attr name="net_layout_gravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30" />
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50" />
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03" />
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05" />
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10" />
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01" />
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11" />
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003" />
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005" />
        </attr>
    </declare-styleable>

</resources>